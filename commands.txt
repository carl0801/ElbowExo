
This to build the docker:
docker build --platform linux/amd64 -t ros_foxy_workspace .


This to run the docker:
docker run --platform linux/amd64 -it --rm -v $(pwd)/workspace:/root/workspace -w /root/workspace ros_foxy_workspace 





maybe 
docker run --rm -it --privileged --platform linux/amd64 --device=/dev/tty.Bluetooth-Incoming-Port ros_foxy_workspace bash -c "bluetoothd && bash"


docker run --platform linux/amd64 --rm -v $(pwd)/workspace:/project/workspace -w /project/workspace/build my_ros_foxy_image bash -c "cmake .. && make && ./hello_world"

docker run --platform linux/amd64 -it --rm -v $(pwd)/workspace:/project/workspace -w /project/workspace/build my_ros_foxy_image bash

docker run --platform linux/amd64 -it --rm -v $(pwd)/workspace:/project/workspace -w /project/workspace/build my_ros_foxy_image bash -c "cmake .. && make && ./hello_world && exec bash"

docker run --platform linux/amd64 -it --rm -v $(pwd)/workspace:/project/workspace -w /project/workspace my_ros_foxy_image bash -c "cd build/ && cmake .. && make && ./hello_world && cd .. && exec bash"



docker run -it --rm -v $(pwd)/workspace:/root/workspace ros_foxy_workspace -c "cd workspace && source install/setup.bash && ros2 launch emg_launch emg_launch.py && exec bash"





# Navigate to your workspace
cd ~/workspace

# Build the workspace
colcon build

# Source the setup script
source install/setup.bash

# Launch the nodes
ros2 launch emg_launch emg_launch.py